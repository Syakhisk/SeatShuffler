/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package seat.shuffler;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.*;
/**
 *
 * @author Krozzle
 */
public class codeFrame extends javax.swing.JFrame {
    List registered = new ArrayList();
    List absen = new ArrayList();
    List cowok = new ArrayList();
    List cewek = new ArrayList();
    List cowokAdded = new ArrayList();
    List cewekAdded = new ArrayList();
    /**
     * Creates new form codeFrame
     */
    public codeFrame() {
        initComponents();
        fileGenerator();
        //closePrompt();
        jpanelTable.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jpanelPair = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtableShufflerNoDB = new javax.swing.JTable();
        jpanelTable = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtableShufflerDB = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jbuttShuffle = new javax.swing.JButton();
        jtextDisp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbuttAuto = new javax.swing.JButton();
        jbuttReset = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner = new javax.swing.JSpinner();
        jcbDatabase = new javax.swing.JCheckBox();
        jbuttonUpdate = new javax.swing.JButton();
        jcbGender = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jcbNoDB = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jbuttSaveResult = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableAbsen = new javax.swing.JTable();
        jtextNama = new javax.swing.JTextField();
        jbuttAdd = new javax.swing.JButton();
        jbuttRemove = new javax.swing.JButton();
        jbuttEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jcomboGender = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jbuttOk = new javax.swing.JButton();
        jbuttRand = new javax.swing.JButton();
        jbuttSave = new javax.swing.JButton();
        jbuttLoad = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jtextNamaKelas = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jTextCheck = new javax.swing.JTextField();
        jButtCheck = new javax.swing.JButton();
        jLabelShow = new javax.swing.JLabel();
        jtextUpdate = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmenuFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem14 = new javax.swing.JMenuItem();
        jmenuHow = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jmenuAbout = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Seat Shuffler");
        setResizable(false);

        jtableShufflerNoDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Posisi Kursi", "Pasangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jtableShufflerNoDB);
        if (jtableShufflerNoDB.getColumnModel().getColumnCount() > 0) {
            jtableShufflerNoDB.getColumnModel().getColumn(0).setResizable(false);
            jtableShufflerNoDB.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jpanelPairLayout = new javax.swing.GroupLayout(jpanelPair);
        jpanelPair.setLayout(jpanelPairLayout);
        jpanelPairLayout.setHorizontalGroup(
            jpanelPairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelPairLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpanelPairLayout.setVerticalGroup(
            jpanelPairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelPairLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtableShufflerDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Posisi Kursi", "Nama", "Pasangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtableShufflerDB);
        if (jtableShufflerDB.getColumnModel().getColumnCount() > 0) {
            jtableShufflerDB.getColumnModel().getColumn(0).setResizable(false);
            jtableShufflerDB.getColumnModel().getColumn(1).setResizable(false);
            jtableShufflerDB.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jpanelTableLayout = new javax.swing.GroupLayout(jpanelTable);
        jpanelTable.setLayout(jpanelTableLayout);
        jpanelTableLayout.setHorizontalGroup(
            jpanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpanelTableLayout.setVerticalGroup(
            jpanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
        );

        jbuttShuffle.setText("Shuffle");
        jbuttShuffle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttShuffleActionPerformed(evt);
            }
        });

        jtextDisp.setEditable(false);
        jtextDisp.setAlignmentX(37.0F);
        jtextDisp.setAlignmentY(27.0F);
        jtextDisp.setAutoscrolls(false);
        jtextDisp.setFocusable(false);
        jtextDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextDispActionPerformed(evt);
            }
        });

        jLabel1.setText("Pasangan Terpilih");

        jbuttAuto.setText("Auto Shuffle");
        jbuttAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttAutoActionPerformed(evt);
            }
        });

        jbuttReset.setText("Reset");
        jbuttReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jtextDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(173, 173, 173))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbuttShuffle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbuttReset, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbuttAuto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtextDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbuttShuffle)
                            .addComponent(jbuttAuto))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbuttReset))))
        );

        jLabel4.setText("Jumlah Pasangan");

        jSpinner.setModel(new javax.swing.SpinnerNumberModel(7, 1, 30, 1));

        jcbDatabase.setText("Pakai Database Absen");
        jcbDatabase.setToolTipText("Menghasilkan nama dari database absen");
        jcbDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDatabaseActionPerformed(evt);
            }
        });

        jbuttonUpdate.setText("Update Data");
        jbuttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonUpdateActionPerformed(evt);
            }
        });

        jcbGender.setText("Gender Pasangan Sama");
        jcbGender.setToolTipText("Menghasilkan pasangan bergender sama");
        jcbGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbGenderActionPerformed(evt);
            }
        });

        jLabel6.setText("Pasangan Sudah Ditentukan :");

        jcbNoDB.setSelected(true);
        jcbNoDB.setText("Tanpa Database Absen");
        jcbNoDB.setToolTipText("Hanya menghasilkan nomor pasangan tanpa nama");
        jcbNoDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNoDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbNoDB)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator2)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbGender)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jcbDatabase)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbuttonUpdate))
                            .addComponent(jLabel6)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbNoDB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(7, 7, 7)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbDatabase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbuttonUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbGender)
                .addContainerGap())
        );

        jLabel7.setBackground(new java.awt.Color(255, 204, 153));
        jLabel7.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons8_Shuffle_52px_1.png"))); // NOI18N
        jLabel7.setText("Seat Shuffler");

        jbuttSaveResult.setText("Save Data ");
        jbuttSaveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttSaveResultActionPerformed(evt);
            }
        });

        jLabel8.setText("Laki-Laki: ");

        jLabel9.setText("0");

        jLabel10.setText("Perempuan: ");

        jLabel11.setText("0");

        jLabel12.setText("Pasangan: ");

        jLabel13.setText("0");

        jProgressBar1.setName("asd"); // NOI18N
        jProgressBar1.setString("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jbuttSaveResult))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jpanelPair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbuttSaveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jpanelPair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jTabbedPane1.addTab("Shuffler", jPanel1);

        jtableAbsen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableAbsen.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtableAbsen.setMinimumSize(new java.awt.Dimension(0, 0));
        jtableAbsen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtableAbsenFocusGained(evt);
            }
        });
        jtableAbsen.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtableAbsenPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jtableAbsen);
        if (jtableAbsen.getColumnModel().getColumnCount() > 0) {
            jtableAbsen.getColumnModel().getColumn(0).setResizable(false);
            jtableAbsen.getColumnModel().getColumn(0).setPreferredWidth(30);
            jtableAbsen.getColumnModel().getColumn(1).setResizable(false);
            jtableAbsen.getColumnModel().getColumn(1).setPreferredWidth(420);
            jtableAbsen.getColumnModel().getColumn(2).setResizable(false);
            jtableAbsen.getColumnModel().getColumn(2).setPreferredWidth(125);
        }

        jtextNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextNamaActionPerformed(evt);
            }
        });
        jtextNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtextNamaKeyPressed(evt);
            }
        });

        jbuttAdd.setText("Tambah");
        jbuttAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttAddActionPerformed(evt);
            }
        });

        jbuttRemove.setText("Hapus");
        jbuttRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttRemoveActionPerformed(evt);
            }
        });

        jbuttEdit.setText("Edit");
        jbuttEdit.setEnabled(false);
        jbuttEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttEditActionPerformed(evt);
            }
        });

        jLabel2.setText("Nama ");

        jcomboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-Laki", "Perempuan" }));
        jcomboGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboGenderActionPerformed(evt);
            }
        });
        jcomboGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcomboGenderKeyPressed(evt);
            }
        });

        jLabel3.setText("Gender");

        jbuttOk.setText("OK");
        jbuttOk.setEnabled(false);
        jbuttOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttOkActionPerformed(evt);
            }
        });

        jbuttRand.setText("Random");
        jbuttRand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttRandActionPerformed(evt);
            }
        });

        jbuttSave.setText("Save Data Absen");
        jbuttSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttSaveActionPerformed(evt);
            }
        });

        jbuttLoad.setText("Load Data Absen");
        jbuttLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttLoadActionPerformed(evt);
            }
        });

        jLabel5.setText("Kelas:");

        jtextNamaKelas.setToolTipText("XI7MIPA");
        jtextNamaKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextNamaKelasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcomboGender, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbuttRand)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttOk))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtextNamaKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbuttSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbuttLoad))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtextNama))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtextNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jbuttRand)
                                    .addComponent(jbuttAdd)
                                    .addComponent(jbuttRemove)
                                    .addComponent(jbuttEdit)
                                    .addComponent(jbuttOk))
                                .addGap(15, 15, 15)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jbuttSave)
                                    .addComponent(jbuttLoad)
                                    .addComponent(jLabel5)
                                    .addComponent(jtextNamaKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jcomboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Absen", jPanel2);

        jButtCheck.setText("Check");
        jButtCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtCheckActionPerformed(evt);
            }
        });

        jLabelShow.setBackground(new java.awt.Color(204, 204, 204));
        jLabelShow.setForeground(new java.awt.Color(255, 51, 102));
        jLabelShow.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelShow, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtCheck))
                .addContainerGap(502, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabelShow, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtCheck)
                .addContainerGap(333, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Name Checker", jPanel3);

        jtextUpdate.setEditable(false);
        jtextUpdate.setBackground(new java.awt.Color(204, 204, 204));
        jtextUpdate.setText("Script Composed by Syakhisk // krozzle 2018");
        jtextUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtextUpdateActionPerformed(evt);
            }
        });

        jmenuFile.setText("File");

        jMenuItem1.setText("Tanpa Database Absen");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmenuFile.add(jMenuItem1);

        jMenuItem2.setText("Pakai Database Absen");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jmenuFile.add(jMenuItem2);

        jMenuItem7.setText("Gender Pasangan Sama");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jmenuFile.add(jMenuItem7);
        jmenuFile.add(jSeparator3);

        jMenuItem3.setText("Shuffle");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jmenuFile.add(jMenuItem3);

        jMenuItem5.setText("Auto Shuffle");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jmenuFile.add(jMenuItem5);

        jMenuItem4.setText("Reset");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jmenuFile.add(jMenuItem4);
        jmenuFile.add(jSeparator4);

        jMenuItem6.setText("Exit");
        jmenuFile.add(jMenuItem6);

        jMenuBar1.add(jmenuFile);

        jMenu1.setText("Save / Load");

        jMenuItem12.setText("Buka Direktori File");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem12);
        jMenu1.add(jSeparator5);

        jMenuItem9.setText("Save Hasil Shuffle");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);
        jMenu1.add(jSeparator6);

        jMenuItem10.setText("Save Database Absen");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem11.setText("Load Database Absen");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);
        jMenu1.add(jSeparator7);

        jMenuItem14.setText("Load Absen XI-7 MIPA");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenuBar1.add(jMenu1);

        jmenuHow.setText("How-to");

        jMenuItem13.setText("How-to Page");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jmenuHow.add(jMenuItem13);

        jMenuBar1.add(jmenuHow);

        jmenuAbout.setText("About");

        jMenuItem8.setText("Data Coder");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jmenuAbout.add(jMenuItem8);

        jMenuBar1.add(jmenuAbout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtextUpdate)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtextUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(613, 684));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbuttResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttResetActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin?", "Hapus Data yang Sudah di-input?", JOptionPane.YES_NO_OPTION);

        if(input == 0){
        reset();
//        jcbDatabase.setEnabled(true);
//        jcbGender.setEnabled(true);
        jcbGender.setSelected(false);
        jcbDatabase.setSelected(false);
        jcbNoDB.setSelected(true);
 //       jcbNoDB.setEnabled(true);
        jpanelTable.setVisible(false);
        jpanelPair.setVisible(true);
        jSpinner.setEnabled(true);

            jLabel9.setText("0");
            jLabel11.setText("0");
            jLabel13.setText("0");

           }
    }//GEN-LAST:event_jbuttResetActionPerformed

    private void jbuttShuffleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttShuffleActionPerformed
        if(jcbDatabase.isSelected() && jcbGender.isSelected()){
            shuffleAbsenGender();

        }else if(jcbDatabase.isSelected() && !jcbGender.isSelected()){
            shuffleAbsen();

        }else if(!jcbDatabase.isSelected()){
            shufflePair();

        }
    }//GEN-LAST:event_jbuttShuffleActionPerformed

    private void jcbDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDatabaseActionPerformed
        System.out.print("Input Database: ");
        if(jcbDatabase.isSelected()){
            inputDatabaseAbsen();
            
            if(cowok.isEmpty() && cewek.isEmpty()){
                javax.swing.JOptionPane.showMessageDialog(null, "Input Database Absen // Isi Absen", "Database Kosong", javax.swing.JOptionPane.ERROR_MESSAGE);
                reset();
                jcbNoDB.doClick();
//                jcbDatabase.setSelected(false);
//                jcbGender.setSelected(false);
//                jSpinner.setEnabled(true);
//                jpanelPair.setVisible(true);
//                jpanelTable.setVisible(false);
//                jcbNoDB.setSelected(true);
                jTabbedPane1.setSelectedComponent(jPanel2);
                 }
            else if(!cowok.isEmpty() && !cewek.isEmpty()){
                reset();
                jpanelPair.setVisible(false);
                jpanelTable.setVisible(true);
                jcbNoDB.setSelected(false);
                inputDatabaseAbsen();
                System.out.println("Checked");
            }
            
        }else{
            System.out.println("Unchecked");
            reset();
            jcbNoDB.doClick();

        }
    }//GEN-LAST:event_jcbDatabaseActionPerformed

    private void jbuttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonUpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        inputDatabaseAbsen();
        jcbDatabase.setSelected(true);
        jcbDatabaseActionPerformed(evt);
        javax.swing.JOptionPane.showMessageDialog(null,"Database Ter-update!");


    }//GEN-LAST:event_jbuttonUpdateActionPerformed

    private void jtextUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtextUpdateActionPerformed

    private void jcbGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbGenderActionPerformed
        if(jcbGender.isSelected()){
            if(!jcbDatabase.isSelected()){
            jcbDatabase.doClick();
            }
        }
        else if(!jcbGender.isSelected()){
        
        
        }
        /*jcbNoDB.setSelected(false);
        jcbDatabase.setSelected(true);
        jpanelPair.setVisible(false);
        jpanelTable.setVisible(true);
        inputDatabaseAbsen();
        System.out.println("Gender Trigger");
        if(cowok.isEmpty() && cewek.isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(null, "Input Database Absen // Isi Absen", "Empty Database", javax.swing.JOptionPane.ERROR_MESSAGE);
            jcbDatabase.setSelected(false);
            jcbGender.setSelected(false);
            jSpinner.setEnabled(true);
            jpanelPair.setVisible(true);
            jpanelTable.setVisible(false);
            jTabbedPane1.setSelectedComponent(jPanel2);
            }*/
    }//GEN-LAST:event_jcbGenderActionPerformed

    private void jbuttAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttAutoActionPerformed
        if(registered.size() < cowok.size() + cewek.size() || registered.size() < (Integer) jSpinner.getValue()){
            if(jcbDatabase.isSelected() && jcbGender.isSelected()){
                while((double)jtableShufflerDB.getRowCount() <= Math.ceil(((double)cowok.size() + (double)cewek.size())/2.0) - 1){
                jbuttShuffle.doClick();
                }jbuttShuffle.doClick();
                
            }else if(jcbDatabase.isSelected() && !jcbGender.isSelected()){
                while((double)jtableShufflerDB.getRowCount() <= Math.ceil((double)cowok.size() + (double)cewek.size())/2.0 - 1){
                jbuttShuffle.doClick();
                }jbuttShuffle.doClick();

            }else if(!jcbDatabase.isSelected()){
                while(jtableShufflerNoDB.getRowCount() < (Integer)jSpinner.getValue()){
                jbuttShuffle.doClick();
                }jbuttShuffle.doClick();
            }
        }else{
        //javax.swing.JOptionPane.showMessageDialog(null, "Done!");

        }

    }//GEN-LAST:event_jbuttAutoActionPerformed

    private void jtextNamaKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextNamaKelasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtextNamaKelasActionPerformed

    private void jbuttLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttLoadActionPerformed
            String docupath = new JFileChooser().getFileSystemView().getDefaultDirectory().toString() + "//Data Seat Shuffler//";
            File direct = new File(docupath);
            
            JFileChooser path = new JFileChooser(direct);
            path.showOpenDialog(null);
            File f = path.getSelectedFile();
            String filePath = f.getAbsolutePath();
            File file = new File(filePath);

            int input = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin?", "Hapus Data yang Sudah di-input?", JOptionPane.YES_NO_OPTION);
            
                if(input == 0){
                    if(jtableAbsen.getRowCount() > 0){
                        while(jtableAbsen.getRowCount() > 0){
                            jbuttRemove.doClick();
                        }
                    }
                    try {
                        FileReader fr = new FileReader(file);
                        BufferedReader br = new BufferedReader(fr);

                        DefaultTableModel model = (DefaultTableModel)jtableAbsen.getModel();
                        Object[] lines = br.lines().toArray();

                        for(int i = 0; i < lines.length; i++){
                            String[] row = lines[i].toString().split("<>");
                            model.addRow(row);
                        }

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(codeFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
          }
        
      
    }//GEN-LAST:event_jbuttLoadActionPerformed

    private void jbuttSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttSaveActionPerformed
        try {
             String docupath = new JFileChooser().getFileSystemView().getDefaultDirectory().toString() + "//Data Seat Shuffler//";
             File direct = new File(docupath);

            DateFormat dateFormat = new SimpleDateFormat(" dd.MM.yy_HH.mm.ss");
            Date date = new Date();
            JFileChooser choose = new JFileChooser();
            File file = new File(docupath + "SAVE_"+jtextNamaKelas.getText() + dateFormat.format(date) + ".txt");

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            for(int i = 0; i < jtableAbsen.getRowCount(); i++){
                for(int j = 0; j < jtableAbsen.getColumnCount(); j++){
                    bw.write(jtableAbsen.getModel().getValueAt(i, j) + "<>");
                }
                bw.newLine();
            }

            bw.close();
            fw.close();

            javax.swing.JOptionPane.showMessageDialog(null, "Data Disimpan di \n" + file);

        }
        catch (IOException ex) {
            Logger.getLogger(codeFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_jbuttSaveActionPerformed

    private void jbuttRandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttRandActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin?", "Hapus Data yang Sudah di-input?", JOptionPane.YES_NO_CANCEL_OPTION);
        if(input == 0){
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();

        if(jtableAbsen.getRowCount() > 0){
            while(jtableAbsen.getRowCount() > 0){
                model.removeRow(jtableAbsen.getRowCount()-1);
            }
        }
        randomNameGeneration();

        } else {};
    }//GEN-LAST:event_jbuttRandActionPerformed

    private void jbuttOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttOkActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        if(!jtextNama.getText().equals("")){
            model.setValueAt(jtextNama.getText(), jtableAbsen.getSelectedRow(), 1);
            model.setValueAt(jcomboGender.getSelectedItem(), jtableAbsen.getSelectedRow(), 2);

            jtextNama.setText("");
            jbuttEdit.setEnabled(true);
            jbuttOk.setEnabled(false);
            jtextNama.requestFocus();
            jbuttAdd.setEnabled(true);
            jbuttRemove.setEnabled(true);
            jbuttRand.setEnabled(true);
        }
    }//GEN-LAST:event_jbuttOkActionPerformed

    private void jcomboGenderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcomboGenderKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && !jbuttOk.isEnabled()){
            jbuttAdd.doClick();
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ENTER && jbuttOk.isEnabled()){
            jbuttOk.doClick();
        }
    }//GEN-LAST:event_jcomboGenderKeyPressed

    private void jcomboGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcomboGenderActionPerformed

    private void jbuttEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttEditActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        jtextNama.setText("" + jtableAbsen.getValueAt(jtableAbsen.getSelectedRow(),1));
        jcomboGender.setSelectedItem(jtableAbsen.getValueAt(jtableAbsen.getSelectedRow(), 2));
        jbuttOk.setEnabled(true);
        jbuttEdit.setEnabled(false);
        jbuttAdd.setEnabled(false);
        jbuttRemove.setEnabled(false);
        jbuttRand.setEnabled(false);
    }//GEN-LAST:event_jbuttEditActionPerformed

    private void jbuttRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttRemoveActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        if(jtableAbsen.getRowCount() > 0){
            model.removeRow(jtableAbsen.getRowCount() - 1);

        }
    }//GEN-LAST:event_jbuttRemoveActionPerformed

    private void jbuttAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttAddActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        jtextNama.requestFocus();
        jbuttRemove.setEnabled(true);

        if(!jtextNama.getText().equals("")){
            int jmlRow = jtableAbsen.getRowCount()+1;
            String nama = "" + jtextNama.getText();
            String gender = "" + jcomboGender.getSelectedItem();
            jtextNama.setText("");
            model.addRow(new Object[]{jmlRow,nama,gender});
        }
    }//GEN-LAST:event_jbuttAddActionPerformed

    private void jtextNamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtextNamaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && !jbuttOk.isEnabled()){
            jcomboGender.requestFocus();
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ENTER && jbuttOk.isEnabled()){
            jbuttOk.doClick();
        }
    }//GEN-LAST:event_jtextNamaKeyPressed

    private void jtextNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextNamaActionPerformed

    }//GEN-LAST:event_jtextNamaActionPerformed

    private void jtableAbsenPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtableAbsenPropertyChange

    }//GEN-LAST:event_jtableAbsenPropertyChange

    private void jtableAbsenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtableAbsenFocusGained
        jbuttEdit.setEnabled(true);
    }//GEN-LAST:event_jtableAbsenFocusGained

    private void jtextDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtextDispActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtextDispActionPerformed

    private void jcbNoDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNoDBActionPerformed
        jcbDatabase.setSelected(false);
        jcbGender.setSelected(false);
        jcbNoDB.setSelected(true);
        jpanelTable.setVisible(false);
        jpanelPair.setVisible(true);
        reset();
    }//GEN-LAST:event_jcbNoDBActionPerformed

    private void jbuttSaveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttSaveResultActionPerformed
        try {
            String docupath = new JFileChooser().getFileSystemView().getDefaultDirectory().toString() + "//Data Seat Shuffler//";
            File direct = new File(docupath);
            DateFormat dateFormat = new SimpleDateFormat("dd.MM.yy_HH.mm.ss");
            Date date = new Date();
            //String f = "" + choose.getCurrentDirectory();

            File file = new File(docupath + "RESULT_" + jtextNamaKelas.getText() + dateFormat.format(date) + ".txt");
            if (file.getParentFile().mkdir()) {
                file.createNewFile();
            } else {
                //throw new IOException("Failed to create directory " + file.getParent());
                //file.createNewFile();

            }
            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            
            dateFormat = new SimpleDateFormat("dd/MM/yy HH.mm.ss");
            date = new Date();
            
            bw.write("----------------DATA SHUFFLE RESULT----------------");
            bw.newLine();
            bw.write("Waktu & Tanggal: " + date);
            bw.newLine();
            bw.write("Database: " + jcbDatabase.isSelected());
            bw.newLine();
            bw.write("Gender Sama: " + jcbGender.isSelected());
            bw.newLine();
            bw.write("Seat Shuffler By Krozzle, 2018");
            bw.newLine();
            bw.write("---------------------------------------------------");
            bw.newLine();
            
            if(jtableShufflerDB.getRowCount() > 0){
                    for(int i = 0; i < jtableShufflerDB.getRowCount(); i++){
                for(int j = 0; j < jtableShufflerDB.getColumnCount(); j++){
                    bw.write(jtableShufflerDB.getModel().getValueAt(i, j) + " ");
                }
                bw.newLine();
                }
            }else if(jtableShufflerNoDB.getRowCount() > 0){
                    for(int i = 0; i < jtableShufflerNoDB.getRowCount(); i++){
                for(int j = 0; j < jtableShufflerNoDB.getColumnCount(); j++){
                    bw.write(jtableShufflerNoDB.getModel().getValueAt(i, j) + " ");
                }
                bw.newLine();
                }
            }

            bw.close();
            fw.close();

            javax.swing.JOptionPane.showMessageDialog(null, "Data Disimpan di \n" + file);

        }
        catch (IOException ex) {
            Logger.getLogger(codeFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_jbuttSaveResultActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jcbNoDBActionPerformed(evt);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        jbuttReset.doClick();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        registered.clear();
        cowok.clear();
        cewek.clear();
        cowokAdded.clear();
        cewekAdded.clear();
        while(jtableAbsen.getRowCount() > 0){
            model.removeRow(jtableAbsen.getRowCount() -1);
        }
        
        xi7mipa();
        jTabbedPane1.setSelectedComponent(jPanel2);
        jbuttSave.doClick();
        javax.swing.JOptionPane.showMessageDialog(null, "Data Absen XI-7 MIPA Ter-load");
        
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //jcbDatabase.setSelected(true);
        jcbDatabase.doClick();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        //jcbDatabase.setSelected(true);
        //jcbGender.setSelected(true);
        jcbGender.doClick();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jbuttShuffle.doClick();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        jbuttAuto.doClick();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        String docupath = new JFileChooser().getFileSystemView().getDefaultDirectory().toString() + "//Data Seat Shuffler//";
        File direct = new File(docupath);
        JFileChooser dialog =  new JFileChooser(direct);

        try {
            Desktop desktop = Desktop.getDesktop();
            desktop.open(direct);
        } catch (IOException ex) {
            Logger.getLogger(codeFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        jbuttSaveResult.doClick();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        jbuttSave.doClick();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        jbuttLoad.doClick();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        this.setVisible(true);
        new aboutFrame().setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        this.setVisible(true);
        new howToFrame().setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jButtCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtCheckActionPerformed
        boolean ada = false;        
        for(int i = 0; i < jtableAbsen.getRowCount(); i++){
            ada = jTextCheck.getText().equalsIgnoreCase("" + jtableAbsen.getValueAt(i, 1)); 
            jLabelShow.setText(ada + "");
            System.out.println(i + " " + " " + jtableAbsen.getValueAt(i, 1) + " " + jTextCheck.getText() + " " + ada);
            if(ada == true){
                jLabelShow.setText("Terdaftar di, " + jtableAbsen.getValueAt(i, 0)+ ". " +jtableAbsen.getValueAt(i, 1)+ ", " +jtableAbsen.getValueAt(i, 2));
                break;
            }
            else{
                 jLabelShow.setText("Tidak Terdaftar");
            }
        }     
        
    }//GEN-LAST:event_jButtCheckActionPerformed


    
    private void closePrompt(){
        JFrame jFrame = new JFrame("Window Listener");

        WindowListener listener = new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent w) {
                int response = JOptionPane.showConfirmDialog(null, "Apakah Hasil Sudah Di-Save?", "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    System.exit(0);
                }
            }
        };

        jFrame.addWindowListener(listener);
        jFrame.setVisible(true);
    }
    
    private void fileGenerator() {
        String docupath = new JFileChooser().getFileSystemView().getDefaultDirectory().toString() + "//Data Seat Shuffler//";
        File direct = new File(docupath);
        System.out.println(direct);
        JFileChooser choose = new JFileChooser(direct);
//         File file = new File("."+"//Data Seat Shuffler//");
//        if (!file.exists()) {
//            if (file.mkdir()) {
//                System.out.println("Directory is created!");
//                choose = new JFileChooser(file);
//                choose.showOpenDialog(null);
//            } else {
//                System.out.println("Failed to create directory!");
//            }
//        }
        if(!direct.exists()){
            direct.mkdirs();
            

        } else if(direct.exists()){
            System.out.println("Save directory already exists");
        
        }
    }

    private void randomNameGeneration(){
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        Random randMax = new Random();
        int maks = randMax.nextInt(45)+20;
        int jmlRow;
        String nama;
        int gender;
        String gender1;
        Random rand = new Random();
        char charIs;

        for(int i = 0; i < maks; i++){
        jmlRow = jtableAbsen.getRowCount()+1;
        gender = rand.nextInt(2);

        if(gender == 0){
            gender1 = "Laki-Laki";
        }
        else{gender1 = "Perempuan";}
        charIs = gender1.charAt(0);

        nama = "bot  " + i + "  "+charIs;

        model.addRow(new Object[]{jmlRow,nama,gender1});

    }
    }
    private void inputDatabaseAbsen(){

         for(int i = 0; i < jtableAbsen.getRowCount(); i++){
             if(jtableAbsen.getValueAt(i, 2).equals("Laki-Laki") && !cowok.contains(jtableAbsen.getValueAt(i, 1))){
                 cowok.add(jtableAbsen.getValueAt(i, 1));
             }
             else if(jtableAbsen.getValueAt(i, 2).equals("Perempuan") && !cewek.contains(jtableAbsen.getValueAt(i, 1))){
                 cewek.add(jtableAbsen.getValueAt(i, 1));
             }
        }
            System.out.println(cewek);
            System.out.println(cowok);
            System.out.println("cowok : " + cowok.size());
            System.out.println("cewek : " + cewek.size());
            jLabel9.setText("" + cowok.size());
            jLabel11.setText("" + cewek.size());
            jLabel13.setText("" + Math.ceil(((double)cowok.size() + (double)cewek.size())/2.0));
     }
    private void shufflePair(){
         DefaultTableModel model = (DefaultTableModel) jtableShufflerNoDB.getModel();
         Random rand = new Random();

         if (registered.size() < (Integer)jSpinner.getValue()){
             int newRand = rand.nextInt((Integer)jSpinner.getValue())+1;
             do{
                 newRand = rand.nextInt((Integer)jSpinner.getValue())+1;
             }
             while(registered.contains(newRand));

             registered.add(newRand);
             model.addRow(new Object[]{jtableShufflerNoDB.getRowCount()+1, newRand});
             jtextDisp.setText("" + newRand);
             jLabel9.setText("0");
             jLabel11.setText("0");
             jLabel13.setText("" + (Integer)jSpinner.getValue());

         } else {
             javax.swing.JOptionPane.showMessageDialog(null, "Selesai!");

         }


     }
    private void shuffleAbsenGender(){
         DefaultTableModel model = (DefaultTableModel) jtableShufflerDB.getModel();
         Random rand = new Random();
         int newRand;
         String newName = null;
         String anotherName = null;

         if(registered.size() < cowok.size() + cewek.size()){
            do{
                newRand = rand.nextInt(cowok.size() + cewek.size());
                newName = "" + jtableAbsen.getModel().getValueAt(newRand, 1);
            }while(registered.contains(newName));

                registered.add(newName);

                if(cowok.contains(newName) && cowok.size() - cowokAdded.size() >= 0){
                    cowokAdded.add(newName);

                    if(cowok.size() - cowokAdded.size() >= 1){
                        do{
                        newRand = rand.nextInt(cowok.size());
                        anotherName = "" + cowok.get(newRand);
                        }while(cowokAdded.contains(anotherName));

                        registered.add(anotherName);
                        cowokAdded.add(anotherName);

                    }else if(cowok.size() - cowokAdded.size() == 1){
                        anotherName = null;

                    }
                }else if(cewek.contains(newName) && cewek.size() - cewekAdded.size() >= 0){
                    cewekAdded.add(newName);

                    if(cewek.size() - cewekAdded.size() >= 1){
                        do{
                        newRand = rand.nextInt(cewek.size());
                        anotherName = "" + cewek.get(newRand);
                        }while(cewekAdded.contains(anotherName));

                        registered.add(anotherName);
                        cewekAdded.add(anotherName);

                    }else if(cewek.size() - cewekAdded.size() == 1){
                        anotherName = null;

                    }
                }

            model.addRow(new Object[]{jtableShufflerDB.getRowCount()+1, newName, anotherName});
            System.out.println(newName + ", " + anotherName);
            jtextDisp.setText(newName + ", " + anotherName);


        }else{
             javax.swing.JOptionPane.showMessageDialog(null,"Selesai!");
//                    System.out.println("cowok = " + cowok.size() + " = " + cowok);
//                    System.out.println("cowokAdded = " + cowokAdded.size() + " = " + cowokAdded);
//                    System.out.println("cewek = " + cewek.size() + " = " + cewek);
//                    System.out.println("cewekAdded = " + cewekAdded.size() + " = " + cewekAdded);
//                    System.out.println(registered.size() + " = registered = " + registered);
         }
     }
    private void shuffleAbsen(){
         DefaultTableModel model = (DefaultTableModel) jtableShufflerDB.getModel();
         Random rand = new Random();
         int newRand;
         String newName = null;
         String anotherName = null;

         if(registered.size() < cowok.size() + cewek.size()){
            do{
                newRand = rand.nextInt(cowok.size() + cewek.size());
                newName = "" + jtableAbsen.getModel().getValueAt(newRand, 1);

            }while(registered.contains(newName));
            //coba asign new name ke var baru
            registered.add(newName);

            if(cowok.size() + cewek.size() - registered.size() >= 1){
                do{
                newRand = rand.nextInt(cowok.size() + cewek.size());
                anotherName = "" + jtableAbsen.getModel().getValueAt(newRand, 1);
                //newNameV = newName;
                }while(registered.contains(anotherName));

                registered.add(anotherName);

            }else if(cowok.size() + cewek.size() - registered.size() == 1){
                anotherName = null;

            }
            model.addRow(new Object[]{jtableShufflerDB.getRowCount()+1, newName, anotherName});
            System.out.println(newName + ", " + anotherName);
            jtextDisp.setText(newName + ", " + anotherName);

        }else if(cowok.isEmpty() && cewek.isEmpty()){
                javax.swing.JOptionPane.showMessageDialog(null, "Input Database Absen // Isi Absen", "Database Kosong", javax.swing.JOptionPane.ERROR_MESSAGE);

         }else{
             javax.swing.JOptionPane.showMessageDialog(null,"Selesai!");

         }
     }
    private void xi7mipa(){
        DefaultTableModel model = (DefaultTableModel) jtableAbsen.getModel();
        model.addRow(new Object[]{"1","AGNES","Perempuan"});
        model.addRow(new Object[]{"2","ALDY","Laki-Laki"});
        model.addRow(new Object[]{"3","ALFATH","Laki-Laki"});
        model.addRow(new Object[]{"4","ALYA","Perempuan"});
        model.addRow(new Object[]{"5","ANDHIKA","Laki-Laki"});
        model.addRow(new Object[]{"6","ANGEL","Perempuan"});
        model.addRow(new Object[]{"7","ANNA","Perempuan"});
        model.addRow(new Object[]{"8","DELIYA","Perempuan"});
        model.addRow(new Object[]{"9","DEVI","Perempuan"});
        model.addRow(new Object[]{"10","DHIYA","Perempuan"});
        model.addRow(new Object[]{"11","DWINATA","Perempuan"});
        model.addRow(new Object[]{"12","FARAZ","Laki-Laki"});
        model.addRow(new Object[]{"13","FARREL","Laki-Laki"});
        model.addRow(new Object[]{"14","FAYAZA","Perempuan"});
        model.addRow(new Object[]{"15","FEBRI","Laki-Laki"});
        model.addRow(new Object[]{"16","FERDINAN","Laki-Laki"});
        model.addRow(new Object[]{"17","FIONA","Perempuan"});
        model.addRow(new Object[]{"18","FITRIANA","Perempuan"});
        model.addRow(new Object[]{"19","HANIF","Laki-Laki"});
        model.addRow(new Object[]{"20","HEYDI","Perempuan"});
        model.addRow(new Object[]{"21","INTAN","Perempuan"});
        model.addRow(new Object[]{"22","LARAS","Perempuan"});
        model.addRow(new Object[]{"23","FARHAN","Laki-Laki"});
        model.addRow(new Object[]{"24","MARIO","Laki-Laki"});
        model.addRow(new Object[]{"25","MARSHA","Perempuan"});
        model.addRow(new Object[]{"26","MELINDA","Perempuan"});
        model.addRow(new Object[]{"27","RIFQI","Laki-Laki"});
        model.addRow(new Object[]{"28","ALPHA","Laki-Laki"});
        model.addRow(new Object[]{"29","UCUP","Laki-Laki"});
        model.addRow(new Object[]{"30","RIJAL","Laki-Laki"});
        model.addRow(new Object[]{"31","NADIA","Perempuan"});
        model.addRow(new Object[]{"32","NADIN","Perempuan"});
        model.addRow(new Object[]{"33","NAUFAL","Laki-Laki"});
        model.addRow(new Object[]{"34","NINDHA","Perempuan"});
        model.addRow(new Object[]{"35","NISA","Perempuan"});
        model.addRow(new Object[]{"36","MALIK","Laki-Laki"});
        model.addRow(new Object[]{"37","FAKHI","Perempuan"});
        model.addRow(new Object[]{"38","ATUL","Perempuan"});
        model.addRow(new Object[]{"39","RIDKY","Laki-Laki"});
        model.addRow(new Object[]{"40","RIMA","Perempuan"});
        model.addRow(new Object[]{"41","ROBBY","Laki-Laki"});
        model.addRow(new Object[]{"42","SEKAR","Perempuan"});
        model.addRow(new Object[]{"43","AFI","Perempuan"});
        model.addRow(new Object[]{"44","SITI","Perempuan"});
        model.addRow(new Object[]{"45","SYAKHISK","Laki-Laki"});
        model.addRow(new Object[]{"46","ZUFAR","Laki-Laki"});

        
    }
    private void reset(){
        DefaultTableModel modeldb = (DefaultTableModel) jtableShufflerDB.getModel();
        DefaultTableModel modelndb = (DefaultTableModel) jtableShufflerNoDB.getModel();

        registered.clear();
        cowok.clear();
        cewek.clear();
        cowokAdded.clear();
        cewekAdded.clear();
        jtextDisp.setText("");

        while(jtableShufflerDB.getRowCount() > 0){
            modeldb.removeRow(jtableShufflerDB.getRowCount()-1);
        }
        while(jtableShufflerNoDB.getRowCount() > 0){
            modelndb.removeRow(jtableShufflerNoDB.getRowCount()-1);
        }
 }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(codeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(codeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(codeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(codeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new codeFrame().setVisible(true);
            }
        }
      );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelShow;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JSpinner jSpinner;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextCheck;
    private javax.swing.JButton jbuttAdd;
    private javax.swing.JButton jbuttAuto;
    private javax.swing.JButton jbuttEdit;
    private javax.swing.JButton jbuttLoad;
    private javax.swing.JButton jbuttOk;
    private javax.swing.JButton jbuttRand;
    private javax.swing.JButton jbuttRemove;
    private javax.swing.JButton jbuttReset;
    private javax.swing.JButton jbuttSave;
    private javax.swing.JButton jbuttSaveResult;
    private javax.swing.JButton jbuttShuffle;
    private javax.swing.JButton jbuttonUpdate;
    private javax.swing.JCheckBox jcbDatabase;
    private javax.swing.JCheckBox jcbGender;
    private javax.swing.JCheckBox jcbNoDB;
    private javax.swing.JComboBox<String> jcomboGender;
    private javax.swing.JMenu jmenuAbout;
    private javax.swing.JMenu jmenuFile;
    private javax.swing.JMenu jmenuHow;
    private javax.swing.JPanel jpanelPair;
    private javax.swing.JPanel jpanelTable;
    private javax.swing.JTable jtableAbsen;
    private javax.swing.JTable jtableShufflerDB;
    private javax.swing.JTable jtableShufflerNoDB;
    private javax.swing.JTextField jtextDisp;
    private javax.swing.JTextField jtextNama;
    private javax.swing.JTextField jtextNamaKelas;
    private javax.swing.JTextField jtextUpdate;
    // End of variables declaration//GEN-END:variables
}
